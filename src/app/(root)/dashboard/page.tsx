import Link from "next/link"
import { DrupalJsonApiParams } from "drupal-jsonapi-params"
import { getServerSession } from "next-auth/next"
import { PageTitle } from "@shared/ui/page-title"
import { Button } from "@shared/ui/button"
import { drupal } from "@shared/lib/drupal"
import { authOptions } from "@features/auth/session"
import { SignOut } from "@features/auth/sign-out"
import { User } from "@entities/user"
import { TNodeCalculationTeaser } from "@entities/node-calculation"
import { ViewsCalculation } from "@widgets/views-calculation"
import { DashboardFilters } from "@widgets/dashboard-filters"
import { Metadata } from "next"

export const metadata: Metadata = {
  title: "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
  description: "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
  robots: {
    index: false,
    follow: false,
  },
}

interface DashboardProps {
  searchParams: Promise<{
    status?: string
    engine_type?: string
    date_from?: string
    date_to?: string
    price_from?: string
    price_to?: string
    search?: string
    page?: string
  }>
}

interface TotalCountProps {
  data: {
    attributes: TNodeCalculationTeaser[]
  }
  meta: {
    count: number
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ API
function buildApiFilters(
  searchParams: Awaited<DashboardProps["searchParams"]>,
  userId: string
) {
  const api = new DrupalJsonApiParams()
    .addFilter("status", "1")
    .addFilter("uid.id", userId)
    .addSort("-created")
    .addPageLimit(20)

  // –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É
  if (searchParams.status && searchParams.status !== "all") {
    api.addFilter("field_status", searchParams.status)
  }

  // –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É –¥–≤–∏–≥–∞—Ç–µ–ª—è
  if (searchParams.engine_type && searchParams.engine_type !== "all") {
    api.addFilter("field_car_type", searchParams.engine_type)
  }

  // –§–∏–ª—å—Ç—Ä –ø–æ –¥–∏–∞–ø–∞–∑–æ–Ω—É –¥–∞—Ç
  if (searchParams.date_from) {
    api.addFilter("created", searchParams.date_from, ">=")
  }
  if (searchParams.date_to) {
    // –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è –¥–æ –∫–æ–Ω—Ü–∞ –¥–Ω—è
    const endDate = new Date(searchParams.date_to)
    endDate.setHours(23, 59, 59, 999)
    api.addFilter("created", endDate.toISOString(), "<=")
  }

  // –§–∏–ª—å—Ç—Ä –ø–æ –¥–∏–∞–ø–∞–∑–æ–Ω—É —Ü–µ–Ω
  if (searchParams.price_from) {
    api.addFilter(
      "field_total_price_round",
      parseInt(searchParams.price_from),
      ">="
    )
  }
  if (searchParams.price_to) {
    api.addFilter(
      "field_total_price_round",
      parseInt(searchParams.price_to),
      "<="
    )
  }

  // –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É (–ø–æ–∏—Å–∫ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ)
  if (searchParams.search) {
    api.addFilter("title", searchParams.search, "CONTAINS")
  }

  // –ü–∞–≥–∏–Ω–∞—Ü–∏—è
  if (searchParams.page) {
    const page = parseInt(searchParams.page) - 1
    api.addPageOffset(page * 20)
  }

  return api
}

export default async function Dashboard({ searchParams }: DashboardProps) {
  const session = await getServerSession(authOptions)

  if (!session) {
    return (
      <div className="space-y-4">
        <PageTitle title="–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç" />
        <div className="text-center py-8">
          <p className="mb-4">
            –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ª–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
          </p>
          <Button asChild>
            <Link href="/signin">–í–æ–π—Ç–∏</Link>
          </Button>
        </div>
      </div>
    )
  }

  const currentUser = session.user.id

  // –î–æ–∂–∏–¥–∞–µ–º—Å—è –ø–æ–ª—É—á–µ–Ω–∏—è searchParams
  const resolvedSearchParams = await searchParams

  // –°—Ç—Ä–æ–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã API —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const apiParams = buildApiFilters(resolvedSearchParams, currentUser)

  try {
    const nodes = await drupal.getResourceCollection<TNodeCalculationTeaser[]>(
      "node--calculation",
      {
        params: apiParams.getQueryObject(),
        next: { revalidate: 300, tags: ["calculations"] },
      }
    )

    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const totalApiParams = new DrupalJsonApiParams()
      .addFilter("status", "1")
      .addFilter("uid.id", currentUser)
      .addPageLimit(1)

    const totalResponse = await drupal.getResourceCollection<TotalCountProps>(
      "node--calculation",
      {
        params: totalApiParams.getQueryObject(),
        deserialize: false,
        next: { revalidate: 300 },
      }
    )

    const hasFilters = Object.values(resolvedSearchParams).some(
      (value) => value && value !== "all" && value !== ""
    )

    return (
      <div className="space-y-6">
        <PageTitle title="–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç" />

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
        <User user={session.user} />

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div className="bg-white rounded-lg border p-4">
            <div className="text-2xl font-bold text-primary">
              {totalResponse.meta.count}
            </div>
            <div className="text-sm text-muted-foreground">–í—Å–µ–≥–æ —Ä–∞—Å—á—ë—Ç–æ–≤</div>
          </div>
          <div className="bg-white rounded-lg border p-4">
            <div className="text-2xl font-bold text-green-600">
              {
                totalResponse.data.attributes.filter(
                  (n) => n.field_status === "completed"
                ).length
              }
            </div>
            <div className="text-sm text-muted-foreground">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö</div>
          </div>
          <div className="bg-white rounded-lg border p-4">
            <div className="text-2xl font-bold text-orange-600">
              {nodes.filter((n) => n.field_status === "requested").length}
            </div>
            <div className="text-sm text-muted-foreground">–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏</div>
          </div>
        </div>

        {/* –§–∏–ª—å—Ç—Ä—ã */}
        <DashboardFilters />

        {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π */}
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <h2 className="text-xl font-semibold">
              {hasFilters ? "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞" : "–ú–æ–∏ —Ä–∞—Å—á—ë—Ç—ã"}
            </h2>
            <div className="text-sm text-muted-foreground"></div>
          </div>

          {nodes.length === 0 ? (
            <div className="text-center py-12">
              <div className="text-4xl mb-4">üîç</div>
              <h3 className="text-lg font-medium mb-2">
                {hasFilters ? "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ" : "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ä–∞—Å—á—ë—Ç–æ–≤"}
              </h3>
              <p className="text-muted-foreground mb-4">
                {hasFilters
                  ? "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —Å–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã"
                  : "–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π —Ä–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è"}
              </p>
              <div className="flex gap-2 justify-center">
                <Button asChild>
                  <Link href="/calc">–°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—á—ë—Ç</Link>
                </Button>
                {hasFilters && (
                  <Button variant="outline" asChild>
                    <Link href="/dashboard">–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</Link>
                  </Button>
                )}
              </div>
            </div>
          ) : (
            <ViewsCalculation nodes={nodes} currentUserID={currentUser} />
          )}
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
        <div className="border-t pt-6">
          <div className="flex flex-col md:flex-row gap-4 items-center justify-between">
            <div className="flex gap-2">
              <Button asChild>
                <Link href="/calc">–ù–æ–≤—ã–π —Ä–∞—Å—á—ë—Ç</Link>
              </Button>
              <Button variant="outline" asChild>
                <Link href="/contact">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</Link>
              </Button>
            </div>

            <div className="text-center">
              <SignOut />
            </div>
          </div>
        </div>
      </div>
    )
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö Dashboard:", error)

    return (
      <div className="space-y-4">
        <PageTitle title="–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç" />
        <User user={session.user} />

        <div className="text-center py-12">
          <div className="text-4xl mb-4">‚ö†Ô∏è</div>
          <h3 className="text-lg font-medium mb-2">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</h3>
          <p className="text-muted-foreground mb-4">
            –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∞—à–∏ —Ä–∞—Å—á—ë—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.
          </p>
          <Button onClick={() => window.location.reload()}>
            –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
          </Button>
        </div>
      </div>
    )
  }
}
